if ((typeof(aXL1bMHy94jZYqfPeTZ4fe$3basis$0PackRealBig$1)) == "undefined") {aXL1bMHy94jZYqfPeTZ4fe$3basis$0PackRealBig$1 = {};
};
(function(){aXL1bMHy94jZYqfPeTZ4fe$3basis$0PackRealBig$1.bytesPerElem$53 = 8;
aXL1bMHy94jZYqfPeTZ4fe$3basis$0PackRealBig$1.isBigEndian$54 = true;
aXL1bMHy94jZYqfPeTZ4fe$3basis$0PackRealBig$1.toBytes$73 = function(r$76){var vec$261 = SmlPrims.real_to_bytes(r$76);
var len$262 = vec$261.length;
if ((len$262 < 0)?true:(len$262 > 1073741823)) {throw CompilerInitial.exn$Size$51;
} else {var t$263 = Array(len$262);
var fix$280 = {};
fix$280.$loop = function(j$265){lab$loop: while (true) {if (j$265 < len$262) {var t$283 = t$263;
var t$282 = j$265;
var t$281;
var v$266 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(len$262 - 1)) - j$265);
if ((v$266 < 0)?true:(v$266 >= vec$261.length)) {throw CompilerInitial.exn$Subscript$50;
} else {t$281 = (vec$261.charCodeAt(v$266));
};
(t$283[t$282] = t$281,0);
var t$284 = SmlPrims.chk_ovf_i32(j$265 + 1);
var j$265 = t$284;
continue lab$loop;
} else {return 0;
};
};
};
var loop$264 = fix$280.$loop;
loop$264(0);
return SmlPrims.charArrayToString(t$263);
};
};
aXL1bMHy94jZYqfPeTZ4fe$3basis$0PackRealBig$1.fromBytes$77 = function(vec$80){var t$285;
var len$268 = vec$80.length;
if ((len$268 < 0)?true:(len$268 > 1073741823)) {throw CompilerInitial.exn$Size$51;
} else {var t$269 = Array(len$268);
var fix$286 = {};
fix$286.$loop = function(j$271){lab$loop: while (true) {if (j$271 < len$268) {var t$289 = t$269;
var t$288 = j$271;
var t$287;
var v$272 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(len$268 - 1)) - j$271);
if ((v$272 < 0)?true:(v$272 >= vec$80.length)) {throw CompilerInitial.exn$Subscript$50;
} else {t$287 = (vec$80.charCodeAt(v$272));
};
(t$289[t$288] = t$287,0);
var t$290 = SmlPrims.chk_ovf_i32(j$271 + 1);
var j$271 = t$290;
continue lab$loop;
} else {return 0;
};
};
};
var loop$270 = fix$286.$loop;
loop$270(0);
t$285 = (SmlPrims.charArrayToString(t$269));
};
return SmlPrims.bytes_to_real(t$285);
};
aXL1bMHy94jZYqfPeTZ4fe$3basis$0PackRealBig$1.subVec$81 = function(v$86,v$87){var t$291;
var vec$159 = h8WSvsgXbw6eki1a6hrTBPn$3basis$0ByteSlice$1$6.slice$1302(v$86,SmlPrims.chk_ovf_i32(v$87 * 8),[0,8]);
var len$160 = vec$159[2];
if ((len$160 < 0)?true:(len$160 > 1073741823)) {throw CompilerInitial.exn$Size$51;
} else {var t$165 = Array(len$160);
var fix$292 = {};
fix$292.$loop = function(j$167){lab$loop: while (true) {if (j$167 < len$160) {var t$295 = t$165;
var t$294 = j$167;
var t$293;
var v$258 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(len$160 - 1)) - j$167);
var v$230 = vec$159[0];
var v$231 = vec$159[1];
var v$232 = vec$159[2];
if ((v$258 < 0)?true:(v$258 >= v$232)) {throw CompilerInitial.exn$Subscript$50;
} else {t$293 = (v$230.charCodeAt(SmlPrims.chk_ovf_i32(v$231 + v$258)));
};
(t$295[t$294] = t$293,0);
var t$296 = SmlPrims.chk_ovf_i32(j$167 + 1);
var j$167 = t$296;
continue lab$loop;
} else {return 0;
};
};
};
var loop$166 = fix$292.$loop;
loop$166(0);
t$291 = (SmlPrims.charArrayToString(t$165));
};
return SmlPrims.bytes_to_real(t$291);
};
aXL1bMHy94jZYqfPeTZ4fe$3basis$0PackRealBig$1.subArr$88 = function(v$93,v$94){var t$297;
var vec$178 = h8WSvsgXbw6eki1a6hrTBPn$3basis$0ByteSlice$1$12.slice$3452(v$93,SmlPrims.chk_ovf_i32(v$94 * 8),[0,8]);
var len$179 = vec$178[2];
if ((len$179 < 0)?true:(len$179 > 1073741823)) {throw CompilerInitial.exn$Size$51;
} else {var t$184 = Array(len$179);
var fix$298 = {};
fix$298.$loop = function(j$186){lab$loop: while (true) {if (j$186 < len$179) {var t$301 = t$184;
var t$300 = j$186;
var t$299;
var v$260 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(len$179 - 1)) - j$186);
var v$251 = vec$178[0];
var v$252 = vec$178[1];
var v$253 = vec$178[2];
if ((v$260 < 0)?true:(v$260 >= v$253)) {throw CompilerInitial.exn$Subscript$50;
} else {t$299 = v$251[SmlPrims.chk_ovf_i32(v$252 + v$260)];
};
(t$301[t$300] = t$299,0);
var t$302 = SmlPrims.chk_ovf_i32(j$186 + 1);
var j$186 = t$302;
continue lab$loop;
} else {return 0;
};
};
};
var loop$185 = fix$298.$loop;
loop$185(0);
t$297 = (SmlPrims.charArrayToString(t$184));
};
return SmlPrims.bytes_to_real(t$297);
};
aXL1bMHy94jZYqfPeTZ4fe$3basis$0PackRealBig$1.update$95 = function(v$104,v$105,v$106){var v$279;
var v$101;
var vec$273 = SmlPrims.real_to_bytes(v$106);
var len$274 = vec$273.length;
if ((len$274 < 0)?true:(len$274 > 1073741823)) {throw CompilerInitial.exn$Size$51;
} else {var t$275 = Array(len$274);
var fix$303 = {};
fix$303.$loop = function(j$277){lab$loop: while (true) {if (j$277 < len$274) {var t$306 = t$275;
var t$305 = j$277;
var t$304;
var v$278 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(len$274 - 1)) - j$277);
if ((v$278 < 0)?true:(v$278 >= vec$273.length)) {throw CompilerInitial.exn$Subscript$50;
} else {t$304 = (vec$273.charCodeAt(v$278));
};
(t$306[t$305] = t$304,0);
var t$307 = SmlPrims.chk_ovf_i32(j$277 + 1);
var j$277 = t$307;
continue lab$loop;
} else {return 0;
};
};
};
var loop$276 = fix$303.$loop;
loop$276(0);
v$101 = (SmlPrims.charArrayToString(t$275));
};
v$279 = [SmlPrims.chk_ovf_i32(v$105 * 8),v$104,v$101];
return h9yxyIKsN0tVfNANKWJu9Ue$3basis$0ByteTable$1$22.copyVec$4053(v$279[0],v$279[1],v$279[2]);
};
return 0;
})();
